//Libraries needed to talk to the seeedstudio serial LCD
#include <SerialLCD.h>
#include <SoftwareSerial.h>

//Assign the pins and variable
const int gasPin1 = A5;
const int heaterPin1 = 12;
const int BuffTime = 10; 
int gasVal1 = 0;
int count = 0;
int valarray[10];
int total = 0;
float avg = 0.0;
float uplimit = 0.0;


SerialLCD slcd(6,7); // Assign pins the LCD is connected to:(TX,RX)

void setup() 
{
  slcd.begin();
  pinMode(heaterPin1, OUTPUT);
  digitalWrite(heaterPin1, HIGH); // Turns heater in MQ-2 on.
  
   while (count < BuffTime/.05) // Loop for hiding the sensor readouts while they level out
  {
    slcd.setCursor(0, 0); // Sets the cursor to the first column and first row
    slcd.print("Heat On/Settle..");
    delay(50);
    count ++; // Adds one to "count"
    slcd.clear();  // Clears the LCD
    }
  
  count = 0;
  
  slcd.setCursor(0, 0); // Sets the cursor to the first column and first row
  slcd.print("Collecting AVG");
  
  while (count < 10) // Loop for gathering 10 values (1 second apart)
  {
    // read from the sensor:  
    valarray[count] = analogRead(gasPin1); 
    // add the reading to the total:
    total= total + valarray[count];       
    // advance to the next position in the array:  
    count ++;                    
    // calculate the average:
    avg = total / 10;  
    delay(1000);    
  }
  count = 0;
}

void loop() 
{
  slcd.clear();  // Clears the LCD 
  // subtract the last reading:
  total= total - valarray[count]; 
  // read from the sensor:  
  valarray[count] = analogRead(gasPin1); 
  // add the reading to the total:
  total= total + valarray[count]; 
  // calculate the average:
  avg = total / 10;  
  // advance to the next position in the array:  
    
  slcd.setCursor(0, 0); // Sets the cursor to the first column and first row
  slcd.print("Average: ");
  slcd.setCursor(10, 0); // Sets the cursor to the sixth column and first row
  slcd.print(avg,DEC); // Prints the gasVal1 value on the LCD
  slcd.setCursor(0, 1); // Sets the cursor to the sixth column and second row
  slcd.print("Current: ");
  slcd.setCursor(10,1);
  slcd.print(valarray[count],DEC); // Prints the gasVal2 value on the LCD
  uplimit = 100 + valarray[count];
  delay(50); 
    if (valarray[count] > uplimit){
      slcd.setCursor(0, 1);
      slcd.print("***OVER LIMIT***");
    }
  count++;
  //if we're at the end of the array...
    if (count >= 10){              
      // ...wrap around to the beginning: 
      count = 0;                                   
      }

}
